{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An instance attribute is defined outside `__init__`",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Instance attribute track defined outside __init__",
  "detailsInfo": "Reports a problem when instance attribute definition is outside `__init__` method.\n\n**Example:**\n\n\n        class Book:\n        def __init__(self):\n            self.author = 'Mark Twain'\n\n        def release(self):\n            self.year = '1889'\n\n\nWhen the quick-fix is applied, the code sample changes to:\n\n\n        class Book:\n        def __init__(self):\n            self.year = '1889'\n            self.author = 'Mark Twain'\n\n        def release(self):\n            pass\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/source.py",
      "language": "Python",
      "line": 56,
      "offset": 9,
      "length": 10,
      "code": {
        "startLine": 54,
        "length": 10,
        "offset": 82,
        "surroundingCode": "        first_track = result.tracks[0]\n        base64 = first_track.track\n        self.track = base64\n\n        getLogger('lava.sources').info(\"Loaded spotify track %s\", self.title)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyAttributeOutsideInitInspection"
  },
  "hash": "b553a48c4deddb42df062a64b15d4161d51ea67ac561443955d062ab8851d072"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Class has no `__init__` method",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Class has no __init__ method",
  "detailsInfo": "Reports cases in Python 2 when a class has no `__init__` method, neither its parent\nclasses.\n\n**Example:**\n\n\n    class Book():\n        pass\n\nThe quick-fix adds the `__init__` method:\n\n\n    class Book():\n        def __init__(self):\n            pass\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/variables.py",
      "language": "Python",
      "line": 1,
      "offset": 7,
      "length": 9,
      "code": {
        "startLine": 1,
        "length": 9,
        "offset": 6,
        "surroundingCode": "class Variables:\n    \"\"\"A class contains static variables for this bot\"\"\"\n    SPOTIFY_CLIENT = \"SPOTIFY_CLIENT_ID\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyClassHasNoInitInspection"
  },
  "hash": "be7606d77e92bcb99f2c7707d3c431b3ef89e217bc6015032fba692d52ca5bea"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Incorrect docstring",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Missing parameter interaction in docstring",
  "detailsInfo": "Reports mismatched parameters in a docstring. For example, `b` is highlighted, because there is no\nsuch a parameter in the `add` function.\n\n\n        def add(a, c):\n        \"\"\"\n        @param a:\n        @param b:\n        @return:\n        \"\"\"\n        pass\n\nThe inspection does not warn you of missing parameters if none of them is mentioned in a docstring:\n\n\n    def mult(a, c):\n        \"\"\"\n        @return:\n        \"\"\"\n        pass\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 381,
      "offset": 39,
      "length": 42,
      "code": {
        "startLine": 379,
        "length": 42,
        "offset": 56,
        "surroundingCode": "    return embed\n\nasync def find_playlist(playlist:str, interaction: ApplicationCommandInteraction) -> Playlist:\n    \"\"\"\n    Find a playlist by uuid."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyIncorrectDocstringInspection"
  },
  "hash": "3f1eaab30139b88298372563fc5e056ca682141a3534d2a304a2a95a972db7dd"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Incorrect docstring",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Unexpected parameter public in docstring",
  "detailsInfo": "Reports mismatched parameters in a docstring. For example, `b` is highlighted, because there is no\nsuch a parameter in the `add` function.\n\n\n        def add(a, c):\n        \"\"\"\n        @param a:\n        @param b:\n        @return:\n        \"\"\"\n        pass\n\nThe inspection does not warn you of missing parameters if none of them is mentioned in a docstring:\n\n\n    def mult(a, c):\n        \"\"\"\n        @return:\n        \"\"\"\n        pass\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 387,
      "offset": 12,
      "length": 6,
      "code": {
        "startLine": 385,
        "length": 6,
        "offset": 99,
        "surroundingCode": "    :param playlist: The uuid of the playlist.\n    :param ctx: The application context.\n    :param public: Flag indicating whether to search for public playlists.\n    :return: A Playlist Instance,\n             or None if the playlist doesn't exist or doesn't meet the criteria."
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyIncorrectDocstringInspection"
  },
  "hash": "94b58382cdbb7e8a9fb20a0e550a81e5d9e34deb3ca4be39c8c448cc99eb5e7c"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Incorrect docstring",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Unexpected parameter ctx in docstring",
  "detailsInfo": "Reports mismatched parameters in a docstring. For example, `b` is highlighted, because there is no\nsuch a parameter in the `add` function.\n\n\n        def add(a, c):\n        \"\"\"\n        @param a:\n        @param b:\n        @return:\n        \"\"\"\n        pass\n\nThe inspection does not warn you of missing parameters if none of them is mentioned in a docstring:\n\n\n    def mult(a, c):\n        \"\"\"\n        @return:\n        \"\"\"\n        pass\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 386,
      "offset": 12,
      "length": 3,
      "code": {
        "startLine": 384,
        "length": 3,
        "offset": 59,
        "surroundingCode": "\n    :param playlist: The uuid of the playlist.\n    :param ctx: The application context.\n    :param public: Flag indicating whether to search for public playlists.\n    :return: A Playlist Instance,"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyIncorrectDocstringInspection"
  },
  "hash": "f779656c731a0ab8e23c046e74608117df1373f180266f99dce28d59389e58ae"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Method is not declared static",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Method `playlist_search` may be 'static'",
  "detailsInfo": "Reports any methods that do not require a class instance creation and can be\nmade static.\n\n**Example:**\n\n\n    class MyClass(object):\n        def my_method(self, x):\n            print(x)\n\nIf a **Make function from method** quick-fix is applied, the code changes to:\n\n\n    def my_method(x):\n        print(x)\n\n\n    class MyClass(object):\n        pass\n\nIf you select the **Make method static** quick-fix, the `@staticmethod` decorator is added:\n\n\n    class MyClass(object):\n        @staticmethod\n        def my_method(x):\n            print(x)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 88,
      "offset": 15,
      "length": 15,
      "code": {
        "startLine": 86,
        "length": 15,
        "offset": 38,
        "surroundingCode": "        return choices\n\n    async def playlist_search(\n        self, interaction: ApplicationCommandInteraction, playlist: str\n    ):"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyMethodMayBeStaticInspection"
  },
  "hash": "3d135aa36bf3470436c9f0fcb3e8575e8ccfe36d6057e56ab863072d12088508"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Method is not declared static",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Method `global_playlist_search` may be 'static'",
  "detailsInfo": "Reports any methods that do not require a class instance creation and can be\nmade static.\n\n**Example:**\n\n\n    class MyClass(object):\n        def my_method(self, x):\n            print(x)\n\nIf a **Make function from method** quick-fix is applied, the code changes to:\n\n\n    def my_method(x):\n        print(x)\n\n\n    class MyClass(object):\n        pass\n\nIf you select the **Make method static** quick-fix, the `@staticmethod` decorator is added:\n\n\n    class MyClass(object):\n        @staticmethod\n        def my_method(x):\n            print(x)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 108,
      "offset": 15,
      "length": 22,
      "code": {
        "startLine": 106,
        "length": 22,
        "offset": 38,
        "surroundingCode": "        return choices\n\n    async def global_playlist_search(\n        self, interaction: ApplicationCommandInteraction, playlist: str\n    ):"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyMethodMayBeStaticInspection"
  },
  "hash": "524406404be0fc56907b43c35ae4276a9ac3db245ac91d692f95218059de8e42"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Improper first parameter",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Usually first parameter of a method is named 'self'",
  "detailsInfo": "Reports methods that lack the first parameter that is usually\nnamed `self`.\n\n**Example:**\n\n\n    class Movie:\n\n       def show():\n           pass\n\nWhen the quick-fix is applied, the code changes to:\n\n\n    class Movie:\n\n       def show(self):\n           pass\n\nThe inspection also reports naming issues in class methods.\n\n**Example:**\n\n\n    class Movie:\n        @classmethod\n        def show(abc):\n            pass\n\nSince the first parameter of a class method should be `cls`, the IDE provides a quick-fix\nto rename it.",
  "sources": [
    {
      "type": "file",
      "path": "lava/playlist.py",
      "language": "Python",
      "line": 11,
      "offset": 23,
      "length": 3,
      "code": {
        "startLine": 9,
        "length": 3,
        "offset": 52,
        "surroundingCode": "        self.public = public\n\n    def is_valid_uuid(val):\n        try:\n            uuid.UUID(str(val))"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyMethodParametersInspection"
  },
  "hash": "3fe368200fa150edde80474217ab62606aedada1cec140a7fd6dc2e5ab5e0437"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'message' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 278,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 276,
        "length": 7,
        "offset": 25,
        "surroundingCode": "\n    else:\n        await message.edit(embed=generate_display_embed(bot, player), components=components)\n\n    bot.logger.debug(\"Updating player in guild %s display message to %s\", bot.get_guild(player.guild_id), message.id)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "0687672e9d556f931b3d553ad1ee9871ec70056636055b56b697618df2716c83"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'name' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 1440,
      "offset": 22,
      "length": 4,
      "code": {
        "startLine": 1438,
        "length": 4,
        "offset": 62,
        "surroundingCode": "\n            for track in result.tracks:\n                data[name][\"data\"][\"tracks\"].append(\n                    {\n                        \"encoded\": track.track,"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "23d1020605dfb9f342d94f3907505bdd423e797d2468160d1903e2bcfe782a35"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'message' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 202,
      "offset": 34,
      "length": 7,
      "code": {
        "startLine": 200,
        "length": 7,
        "offset": 48,
        "surroundingCode": "            )\n\n            bot.loop.create_task(message.delete())\n        except (AttributeError, UnboundLocalError):\n            pass"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "53970ef81d994ecbf8aba0fbeeb6e31fc1c24db665dd081ce7ab17af2c942399"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'player' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 783,
      "offset": 24,
      "length": 6,
      "code": {
        "startLine": 781,
        "length": 6,
        "offset": 87,
        "surroundingCode": "            await update_display(\n                bot=self.bot,\n                player=player\n                or interaction.bot.lavalink.player_manager.get(interaction.guild.id),\n                new_message=await interaction.original_response(),"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "da65c8d24982783cd72b0b464c4a33aec48f0ec923c25aff82ba6e0b10c65400"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Local variable 'data' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 1409,
      "offset": 17,
      "length": 4,
      "code": {
        "startLine": 1407,
        "length": 4,
        "offset": 118,
        "surroundingCode": "                f\"./playlist/{interaction.author.id}.json\", \"r\", encoding=\"utf-8\"\n            ) as f:\n                data = json.load(f)\n\n            modal = PlaylistModal("
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "35a6bf5750a599f5398689e1c584128a67391a58ecf94cdfcc083592ec7cc578"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Parameter 'timeout' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/voice_client.py",
      "language": "Python",
      "line": 43,
      "offset": 32,
      "length": 14,
      "code": {
        "startLine": 41,
        "length": 14,
        "offset": 59,
        "surroundingCode": "            self.cleanup()\n\n    async def connect(self, *, timeout: float, reconnect: bool, self_deaf: bool = False,\n                      self_mute: bool = False) -> None:\n        \"\"\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "7aff68364220f438337fc6fc089e6cbe6cca8bc216919d92216baf7b011138e4"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Parameter 'interaction' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 65,
      "offset": 28,
      "length": 42,
      "code": {
        "startLine": 63,
        "length": 42,
        "offset": 51,
        "surroundingCode": "        self.bot = bot\n\n    async def search(self, interaction: ApplicationCommandInteraction, query: str):\n        if re.match(\n            r\"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\","
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "b983585ea25ff84ca2995022fdc131a4e50da3dae6cd44a8fbdea37d5730269f"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Parameter 'reconnect' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/voice_client.py",
      "language": "Python",
      "line": 43,
      "offset": 48,
      "length": 15,
      "code": {
        "startLine": 41,
        "length": 15,
        "offset": 75,
        "surroundingCode": "            self.cleanup()\n\n    async def connect(self, *, timeout: float, reconnect: bool, self_deaf: bool = False,\n                      self_mute: bool = False) -> None:\n        \"\"\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "da04a5cd4e65db71fdc174052f9f085a16ec32563813f4f883c2de9cc2d0e0ac"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Local variable 'results' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 1508,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 1506,
        "length": 7,
        "offset": 23,
        "surroundingCode": "            )\n\n        results = LoadResult.from_dict(data[playlist_info.name])\n\n        await ensure_voice(interaction, should_connect=True)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "e7bff44160d069f534eebf42d8f2a24dd33b405a8aff17c2874ee401fbe9577c"
}]}
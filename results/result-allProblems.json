{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "An instance attribute is defined outside `__init__`",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Instance attribute track defined outside __init__",
  "detailsInfo": "Reports a problem when instance attribute definition is outside `__init__` method.\n\n**Example:**\n\n\n        class Book:\n        def __init__(self):\n            self.author = 'Mark Twain'\n\n        def release(self):\n            self.year = '1889'\n\n\nWhen the quick-fix is applied, the code sample changes to:\n\n\n        class Book:\n        def __init__(self):\n            self.year = '1889'\n            self.author = 'Mark Twain'\n\n        def release(self):\n            pass\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/source.py",
      "language": "Python",
      "line": 56,
      "offset": 9,
      "length": 10,
      "code": {
        "startLine": 54,
        "length": 10,
        "offset": 82,
        "surroundingCode": "        first_track = result.tracks[0]\n        base64 = first_track.track\n        self.track = base64\n\n        getLogger('lava.sources').info(\"Loaded spotify track %s\", self.title)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyAttributeOutsideInitInspection"
  },
  "hash": "b553a48c4deddb42df062a64b15d4161d51ea67ac561443955d062ab8851d072"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 77,
      "code": {
        "startLine": 1,
        "length": 77,
        "offset": 0,
        "surroundingCode": "import asyncio\nimport subprocess\nfrom typing import Union, Iterable, Optional\n\nimport youtube_related"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "136ccb973f1532ec4a24498878d0f7133196956e7c93b0252a4f714779767424"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Requirements"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "requirements.txt",
      "language": "Requirements",
      "line": 1,
      "offset": 1,
      "length": 290,
      "code": {
        "startLine": 1,
        "length": 290,
        "offset": 0,
        "surroundingCode": "PyNaCl==1.5.0\r\nspotipy==2.23.0\r\nrequests==2.31.0\r\nbeautifulsoup4==4.12.3\r\npsutil==5.9.8\r\ndisnake==2.9.1\r\npython-dotenv==1.0.1\r\nyt-dlp==2024.3.10\r\ncolorlog\r\nyoutube-related\r\nyoutube-search\r\ngit+https://github.com/Nat1anWasTaken/Lavalink.py.git\r\ngit+https://github.com/Snipy7374/disnake-ext-paginator.git"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "1b56100fe62f55703af7b41f49d06380d2cee152e81ea8c636aa99a054a2514a"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Package containing module 'lavalink' is not listed in the project requirements",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/bot.py",
      "language": "Python",
      "line": 6,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 4,
        "length": 8,
        "offset": 89,
        "surroundingCode": "from disnake.abc import MISSING\nfrom disnake.ext.commands import Bot as OriginalBot\nfrom lavalink import Client\n\nfrom lava.source import SourceManager"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "5117b6d9efc1049655fc3582286b8fae6011a525df6217ced71dc5436d51abe5"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "main.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 1874,
      "code": {
        "startLine": 1,
        "length": 1874,
        "offset": 0,
        "surroundingCode": "import asyncio\r\nimport json\r\nimport logging\r\nimport os\r\nfrom os import getenv\r\n\r\nfrom colorlog import ColoredFormatter\r\nfrom disnake import Intents\r\nfrom disnake.ext.commands import CommandSyncFlags\r\nfrom dotenv import load_dotenv\r\n\r\nfrom lava.bot import Bot\r\n\r\n\r\ndef main():\r\n    load_dotenv(\"stack.env\")\r\n\r\n    setup_logging()\r\n\r\n    main_logger = logging.getLogger(\"lava.main\")\r\n\r\n    loop = asyncio.new_event_loop()\r\n\r\n    bot = Bot(\r\n        logger=main_logger,\r\n        command_prefix=getenv(\"PREFIX\", \"l!\"), intents=Intents.all(), loop=loop,\r\n        command_sync_flags=CommandSyncFlags.default()\r\n    )\r\n\r\n    bot.i18n.load(\"locale/\")\r\n\r\n    load_extensions(bot)\r\n\r\n    bot.run(os.environ[\"TOKEN\"])\r\n\r\n\r\ndef setup_logging():\r\n    \"\"\"\r\n    Set up the loggings for the bot\r\n    :return: None\r\n    \"\"\"\r\n    formatter = ColoredFormatter(\r\n        '%(asctime)s %(log_color)s [%(levelname)s] %(message)s',\r\n        datefmt='%Y-%m-%d %H:%M:%S',\r\n        log_colors={\r\n            'DEBUG': 'cyan',\r\n            'INFO': 'white',\r\n            'WARNING': 'yellow',\r\n            'ERROR': 'red',\r\n            'CRITICAL': 'bold_red',\r\n        }\r\n    )\r\n\r\n    stream_handler = logging.StreamHandler()\r\n    stream_handler.setLevel(logging.INFO)\r\n    stream_handler.setFormatter(formatter)\r\n\r\n    file_handler = logging.FileHandler(filename=\"lava.log\", encoding=\"utf-8\", mode=\"w\")\r\n    file_handler.setLevel(logging.DEBUG)\r\n    file_handler.setFormatter(formatter)\r\n\r\n    logging.basicConfig(\r\n        handlers=[stream_handler, file_handler], level=logging.INFO\r\n    )\r\n\r\n\r\ndef load_extensions(bot: Bot) -> Bot:\r\n    \"\"\"\r\n    Load extensions in extensions.json file\r\n    :param bot: The bot to load the extensions to\r\n    :return: The bot\r\n    \"\"\"\r\n    with open(\"extensions.json\", \"r\") as f:\r\n        extensions = json.load(f)\r\n\r\n    for extension in extensions:\r\n        bot.load_e"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "5680ff4a266df72503f45fff36f082ccf4e4faa9c9383b9b6ea5a4ffd80ba4bc"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Package containing module 'lavalink' is not listed in the project requirements",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/source.py",
      "language": "Python",
      "line": 9,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 7,
        "length": 8,
        "offset": 51,
        "surroundingCode": "import requests\nfrom bs4 import BeautifulSoup\nfrom lavalink import Source, Client, LoadResult, LoadType, PlaylistInfo, DeferredAudioTrack\nfrom spotipy import Spotify, SpotifyClientCredentials\nfrom yt_dlp import YoutubeDL"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "582a95ad29e742907129965dc2001e5af48a88bacbea2742eb09e04a9e95ad77"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Package containing module 'lavalink' is not listed in the project requirements",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/voice_client.py",
      "language": "Python",
      "line": 2,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 1,
        "length": 8,
        "offset": 51,
        "surroundingCode": "from disnake import VoiceClient, VoiceChannel\nfrom lavalink import DefaultPlayer\nfrom disnake.utils import get\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "6927ef1e2f2bb98a8996970181045339dba1ab5c27180f58ad1436546b84f77a"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/embeds.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 62,
      "code": {
        "startLine": 1,
        "length": 62,
        "offset": 0,
        "surroundingCode": "from typing import Union\n\nfrom disnake import Embed, Localized\n\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "7f0e264eb1139907c46ba81781ac2c40d694cfcc94b1400b9cb8e136cf13d63d"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/variables.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 114,
      "code": {
        "startLine": 1,
        "length": 114,
        "offset": 0,
        "surroundingCode": "class Variables:\n    \"\"\"A class contains static variables for this bot\"\"\"\n    SPOTIFY_CLIENT = \"SPOTIFY_CLIENT_ID\"\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "848a3cbf600e1b782177766315f923e15c2e127f853eea3a7768473c5b80c8a1"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Package containing module 'lavalink' is not listed in the project requirements",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/events.py",
      "language": "Python",
      "line": 9,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 7,
        "length": 8,
        "offset": 97,
        "surroundingCode": "from disnake.ext import commands\r\nfrom disnake.ext.commands import Cog, CommandInvokeError\r\nfrom lavalink import TrackLoadFailedEvent, DefaultPlayer, PlayerUpdateEvent, TrackEndEvent, QueueEndEvent\r\n\r\nfrom lava.bot import Bot\r"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "94012ee4094f84f8cc1f5c4c64c7122dd73ce8c0d190d7f8774466931486edeb"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Package containing module 'lavalink' is not listed in the project requirements",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 9,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 7,
        "length": 8,
        "offset": 79,
        "surroundingCode": "from disnake.ui import Button\nfrom disnake_ext_paginator import Paginator\nfrom lavalink import DefaultPlayer, LoadResult, LoadType, Timescale, Tremolo, Vibrato, LowPass, Rotation, Equalizer\nfrom psutil import cpu_percent, virtual_memory, Process\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "a1a1dfa7722ddb4b15b355ebc1cb710ae1a5250af37bbeedfb6ac1ce71f0415e"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/bot.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 39,
      "code": {
        "startLine": 1,
        "length": 39,
        "offset": 0,
        "surroundingCode": "import json\nfrom logging import Logger\n\nfrom disnake.abc import MISSING\nfrom disnake.ext.commands import Bot as OriginalBot"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "a40ef4539a3e65f9be95278d50d0e2e6817f24260a1a06e48968aaf57cc0ba96"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Package containing module 'lavalink' is not listed in the project requirements",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 11,
      "offset": 6,
      "length": 8,
      "code": {
        "startLine": 9,
        "length": 8,
        "offset": 76,
        "surroundingCode": "from disnake.ui import Button, ActionRow\nfrom disnake.utils import get\nfrom lavalink import DefaultPlayer, parse_time, AudioTrack\n\nfrom lava.bot import Bot"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "b23571f15e0d6d91f64cd80f3e868011474e32eba74c7b6086a0ed5dba01b5b5"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/voice_client.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 110,
      "code": {
        "startLine": 1,
        "length": 110,
        "offset": 0,
        "surroundingCode": "from disnake import VoiceClient, VoiceChannel\nfrom lavalink import DefaultPlayer\nfrom disnake.utils import get\n\nfrom lava.bot import Bot"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "b63d746d829b1201df727199567e86b6a9259382307f7f2a382b0e9b6571dd60"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/errors.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 37,
      "code": {
        "startLine": 1,
        "length": 37,
        "offset": 0,
        "surroundingCode": "from disnake.abc import Connectable\n\n\nclass UserNotInVoice(Exception):\n    pass"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "c55f5e5d18dd60a11d8a4aa0cefb07ff92a65bbba01a8983265f415294593215"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/events.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 7344,
      "code": {
        "startLine": 1,
        "length": 7344,
        "offset": 0,
        "surroundingCode": "from logging import getLogger\r\nfrom typing import Union\r\n\r\nfrom disnake import TextChannel, Thread, InteractionResponded, ApplicationCommandInteraction, \\\r\n    MessageInteraction\r\nfrom disnake.abc import GuildChannel\r\nfrom disnake.ext import commands\r\nfrom disnake.ext.commands import Cog, CommandInvokeError\r\nfrom lavalink import TrackLoadFailedEvent, DefaultPlayer, PlayerUpdateEvent, TrackEndEvent, QueueEndEvent\r\n\r\nfrom lava.bot import Bot\r\nfrom lava.embeds import ErrorEmbed\r\nfrom lava.errors import MissingVoicePermissions, BotNotInVoice, UserNotInVoice, UserInDifferentChannel\r\nfrom lava.utils import get_recommended_tracks, update_display, ensure_voice, toggle_autoplay\r\n\r\n\r\nclass Events(Cog):\r\n    def __init__(self, bot: Bot):\r\n        self.bot = bot\r\n\r\n        self.logger = getLogger(\"lava.events\")\r\n\r\n    async def cog_load(self):\r\n        await self.bot.wait_until_ready()\r\n\r\n    @commands.Cog.listener(name=\"on_ready\")\r\n    async def on_ready(self):\r\n        self.bot.lavalink.add_event_hook(self.track_hook)\r\n\r\n    async def track_hook(self, event):\r\n        if isinstance(event, PlayerUpdateEvent):\r\n            player: DefaultPlayer = event.player\r\n\r\n            self.logger.debug(\"Received player update event for guild %s\", self.bot.get_guild(player.guild_id))\r\n\r\n            if event.player.fetch(\"autoplay\") and len(event.player.queue) <= 5:\r\n                self.logger.info(\r\n                    \"Queue is empty, adding recommended track for guild %s...\", self.bot.get_guild(player.guild_id)\r\n                )\r\n\r\n                recommendations = await get_recommended_tracks(player, player.current, 5 - len(player.queue))\r\n\r\n                for recommendation in recommendations:\r\n                    event.player.add(requester=0, track=recommendation)\r\n\r\n            try:\r\n                await update_display(self.bot, player)\r\n            except ValueError:\r\n                pass\r\n\r\n        elif isinstance(event, TrackEndEvent):\r\n            player: DefaultPlayer = event.player\r\n\r\n            self.logger.info(\"Received track end event for guild %s\", self.bot.get_guild(player.guild_id))\r\n\r\n            try:\r\n                await update_display(self.bot, player)\r\n            except ValueError:\r\n                pass\r\n\r\n        elif isinstance(event, QueueEndEvent):\r\n            player: DefaultPlayer = event.player\r\n\r\n            self.logger.info(\"Received queue end event for guild %s\", self.bot.get_guild(player.guild_id))\r\n\r\n            try:\r\n                await update_display(self.bot, player)\r\n            except ValueError:\r\n                pass\r\n\r\n        elif isinstance(event, TrackLoadFailedEvent):\r\n            player: DefaultPlayer = event.player\r\n\r\n            locale: str = str(player.fetch(\"locale\", \"zh_TW\"))\r\n\r\n            self.logger.info(\"Received track load failed event for guild %s\", self.bot.get_guild(player.guild_id))\r\n\r\n            # noinspection PyTypeChecker\r\n            channel: Union[GuildChannel, TextChannel, Thread] = self.bot.get_channel(int(player.fetch(\"channel\")))\r\n\r\n            message = await channel.send(\r\n                embed=ErrorEmbed(\r\n                    f\"{self.bot.get_text('error.play_failed', locale, '無法播放歌曲')}: {event.track['title']}\",\r\n                    f\"{self.bot.get_text('reason', locale, '原因')}: `{event.original or 'Unknown'}`\"\r\n                )\r\n            )\r\n\r\n            await player.skip()\r\n\r\n            await update_display(self.bot, player, message, delay=5)\r\n\r\n    @commands.Cog.listener(name=\"on_slash_command_error\")\r\n    async def on_slash_command_error(self, interaction: ApplicationCommandInteraction, error: CommandInvokeError):\r\n        locale = str(interaction.locale)\r\n\r\n        if isinstance(error.original, MissingVoicePermissions):\r\n            embed = ErrorEmbed(\r\n                self.bot.get_text('error.command.title', locale, '指令錯誤'),\r\n                self.bot.get_text('error.no_play_perms', locale, \"我需要 `連接` 和 `說話` 權限才能夠播放音樂\")\r\n            )\r\n\r\n        elif isinstance(error.original, BotNotInVoice):\r\n            embed = ErrorEmbed(\r\n                self.bot.get_text('error.command.title', locale, '指令錯誤'),\r\n                self.bot.get_text('error.bot_not_in_voice', locale, \"我沒有連接到一個語音頻道\")\r\n            )\r\n\r\n        elif isinstance(error.original, UserNotInVoice):\r\n            embed = ErrorEmbed(\r\n                self.bot.get_text('error.command.title', locale, '指令錯誤'),\r\n                self.bot.get_text('error.user_not_in_voice', locale, \"你沒有連接到一個語音頻道\")\r\n            )\r\n\r\n        elif isinstance(error.original, UserInDifferentChannel):\r\n            embed = ErrorEmbed(\r\n                self.bot.get_text('error.command.title', locale, '指令錯誤'),\r\n                f\"{self.bot.get_text('error.must_in_same_voice', locale, '你必須與我在同一個語音頻道')} <#{error.original.voice.id}>\"\r\n            )\r\n\r\n        else:\r\n            raise error.original\r\n\r\n        try:\r\n            await interaction.response.send_message(embed=embed)\r\n        except InteractionResponded:\r\n            await interaction.edit_original_response(embed=embed)\r\n\r\n    @commands.Cog.listener(name=\"on_voice_state_update\")\r\n    async def on_voice_state_update(self, member, before, after):\r\n        if (\r\n                before.channel is not None\r\n                and after.channel is None\r\n                and member.id == self.bot.user.id\r\n        ):\r\n            player: DefaultPlayer = self.bot.lavalink.player_manager.get(member.guild.id)\r\n\r\n            await player.stop()\r\n            player.queue.clear()\r\n\r\n            try:\r\n                await update_display(self.bot, player)\r\n            except ValueError:  # There's no message to update\r\n                pass\r\n\r\n    @commands.Cog.listener(name=\"on_message_interaction\")\r\n    async def on_message_interaction(self, interaction: MessageInteraction):\r\n        if interaction.data.custom_id.startswith(\"control\"):\r\n            if interaction.data.custom_id.startswith(\"control.empty\"):\r\n                await interaction.response.edit_message()\r\n\r\n                return\r\n\r\n            try:\r\n                await ensure_voice(interaction, should_connect=False)\r\n            except (UserNotInVoice, BotNotInVoice, MissingVoicePermissions, UserInDifferentChannel):\r\n                return\r\n\r\n            player: DefaultPlayer = self.bot.lavalink.player_manager.get(interaction.guild_id)\r\n\r\n            match interaction.data.custom_id:\r\n                case \"control.resume\":\r\n                    await player.set_pause(False)\r\n\r\n                case \"control.pause\":\r\n                    await player.set_pause(True)\r\n\r\n                case \"control.stop\":\r\n                    await player.stop()\r\n                    player.queue.clear()\r\n\r\n                case \"control.previous\":\r\n                    await player.seek(0)\r\n\r\n                case \"control.next\":\r\n                    await player.skip()\r\n\r\n                case \"control.shuffle\":\r\n                    player.set_shuffle(not player.shuffle)\r\n\r\n                case \"control.repeat\":\r\n                    player.set_loop(player.loop + 1 if player.loop < 2 else 0)\r\n\r\n                case \"control.rewind\":\r\n                    await player.seek(round(player.position) - 10000)\r\n\r\n                case \"control.forward\":\r\n                    await player.seek(round(player.position) + 10000)\r\n\r\n                case "
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "c9d3bf86848363e7aef7e126fe104a997fc1a9063281b89893c1ecef6b69c194"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/source.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 51,
      "code": {
        "startLine": 1,
        "length": 51,
        "offset": 0,
        "surroundingCode": "import json\nimport re\nfrom logging import getLogger\nfrom os import getenv\nfrom typing import Union, Tuple, Optional"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "dcee15d6edb75a2a6ba220d4dc46c9f6c229fc06a4fef0b479b28e9fd95da968"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unsatisfied package requirements",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Package requirements 'PyNaCl==1.5.0', 'spotipy==2.23.0', 'beautifulsoup4==4.12.3', 'psutil==5.9.8', 'disnake==2.9.1', 'python-dotenv==1.0.1', 'yt-dlp==2024.3.10', 'colorlog', 'youtube-related', 'youtube-search', 'Lavalink.py', 'disnake-ext-paginator' are not satisfied",
  "detailsInfo": "Reports packages mentioned in requirements files (for example, `requirements.txt` or `Pipfile`) but not installed,\nor imported but not mentioned in requirements files.\n\n\nThe IDE shows a quick-fix banner so that you can install the missing packages in one click.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 1,
      "offset": 1,
      "length": 32,
      "code": {
        "startLine": 1,
        "length": 32,
        "offset": 0,
        "surroundingCode": "import re\nfrom os import getpid\n\nfrom disnake import Option, ApplicationCommandInteraction, OptionType, OptionChoice, ButtonStyle, Localized, Embed\nfrom disnake.ext import commands"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPackageRequirementsInspection"
  },
  "hash": "e6374dcbe747a68b6b0beac60a921557e4754905cd9dc59c91fd88e5aac7c454"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "PEP 8 coding style violation",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "PEP 8: E501 line too long (126 \\> 120 characters)",
  "detailsInfo": "Reports violations of the [PEP 8 coding style guide](https://www.python.org/dev/peps/pep-0008/) by running the bundled [pycodestyle.py](https://github.com/PyCQA/pycodestyle) tool.",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 412,
      "offset": 117,
      "length": 5,
      "code": {
        "startLine": 410,
        "length": 5,
        "offset": 264,
        "surroundingCode": "    return f\"{bot.get_icon('progress.start_point', 'ST|')}\" \\\n           f\"{bot.get_icon('progress.start_fill', 'SF|') * round(percentage * 10)}\" \\\n           f\"{bot.get_icon('progress.mid_point', 'MP|') if percentage != 1 else bot.get_icon('progress.start_fill', 'SF|')}\" \\\n           f\"{bot.get_icon('progress.end_fill', 'EF|') * round((1 - percentage) * 10)}\" \\\n           f\"{bot.get_icon('progress.end', 'ED|') if percentage != 1 else bot.get_icon('progress.end_point', 'EP')}\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPep8Inspection"
  },
  "hash": "1193e0955ccff5b2dbdc81145b0982066d94ecf5de17ec7357158f9049ccb9ae"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "PEP 8 coding style violation",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "PEP 8: E501 line too long (126 \\> 120 characters)",
  "detailsInfo": "Reports violations of the [PEP 8 coding style guide](https://www.python.org/dev/peps/pep-0008/) by running the bundled [pycodestyle.py](https://github.com/PyCQA/pycodestyle) tool.",
  "sources": [
    {
      "type": "file",
      "path": "lava/source.py",
      "language": "Python",
      "line": 319,
      "offset": 26,
      "length": 101,
      "code": {
        "startLine": 317,
        "length": 101,
        "offset": 73,
        "surroundingCode": "\n    def check_query(self, query: str) -> bool:\n        youtube_url_rx = r\"^(https?://(www\\.)?(youtube\\.com|music\\.youtube\\.com)/(watch\\?v=|playlist\\?list=)([a-zA-Z0-9_-]+))\"\n\n        if re.match(youtube_url_rx, query):"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPep8Inspection"
  },
  "hash": "24d5e21f04645740f75ff56a64dd6b000a3924497c9df20079721cb4a1a43eb7"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "PEP 8 coding style violation",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "PEP 8: E501 line too long (127 \\> 120 characters)",
  "detailsInfo": "Reports violations of the [PEP 8 coding style guide](https://www.python.org/dev/peps/pep-0008/) by running the bundled [pycodestyle.py](https://github.com/PyCQA/pycodestyle) tool.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 841,
      "offset": 118,
      "length": 8,
      "code": {
        "startLine": 839,
        "length": 8,
        "offset": 207,
        "surroundingCode": "            await interaction.edit_original_response(\n                embed=SuccessEmbed(\n                    f\"{self.bot.get_text('command.filters.removed', locale, '已移除效果器')}：{allowed_filters[filter_name].__name__}\"\n                )\n            )"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPep8Inspection"
  },
  "hash": "4405d48ee1103a5c98b6f64228f22cfa68506aa9c8f66ffc3145c56fa4f1758b"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "PEP 8 coding style violation",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "PEP 8: E501 line too long (165 \\> 120 characters)",
  "detailsInfo": "Reports violations of the [PEP 8 coding style guide](https://www.python.org/dev/peps/pep-0008/) by running the bundled [pycodestyle.py](https://github.com/PyCQA/pycodestyle) tool.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 212,
      "offset": 117,
      "length": 7,
      "code": {
        "startLine": 210,
        "length": 7,
        "offset": 190,
        "surroundingCode": "                    embeds=[\n                               SuccessEmbed(\n                                   title=f\"{self.bot.get_text('command.play.loaded.title', locale, '已加入播放序列')} {len(results.tracks)} / {results.playlist_info.name}\",\n                                   description='\\n'.join(\n                                       ["
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPep8Inspection"
  },
  "hash": "515bdeb46d9ef457a64ba671c2715b5c435514305c040ce7c90185b7ee3f4cb0"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "PEP 8 coding style violation",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "PEP 8: E131 continuation line unaligned for hanging indent",
  "detailsInfo": "Reports violations of the [PEP 8 coding style guide](https://www.python.org/dev/peps/pep-0008/) by running the bundled [pycodestyle.py](https://github.com/PyCQA/pycodestyle) tool.",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 353,
      "offset": 19,
      "length": 3,
      "code": {
        "startLine": 351,
        "length": 3,
        "offset": 152,
        "surroundingCode": "                ]\n            ) + (f\"\\n{bot.get_text('display.queue.more', locale, '還有更多...')}\" if len(player.queue) > 5 else \"\")) or\n                  bot.get_text(\"empty\", locale, \"空\"),\n            inline=True\n        )"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPep8Inspection"
  },
  "hash": "5fca3442d7b1bf629ab1019144384538d008b1bb3ba673bc6980da9bf202740a"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "PEP 8 coding style violation",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "PEP 8: E501 line too long (193 \\> 120 characters)",
  "detailsInfo": "Reports violations of the [PEP 8 coding style guide](https://www.python.org/dev/peps/pep-0008/) by running the bundled [pycodestyle.py](https://github.com/PyCQA/pycodestyle) tool.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 675,
      "offset": 121,
      "length": 4,
      "code": {
        "startLine": 673,
        "length": 4,
        "offset": 202,
        "surroundingCode": "        await interaction.edit_original_response(\n            embed=SuccessEmbed(\n                f\"{self.bot.get_text('command.shuffle.success', locale, '隨機播放模式')}：{self.bot.get_text('enable', locale, '開啟') if player.shuffle else self.bot.get_text('disable', locale, '關閉')}\"\n            )\n        )"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyPep8Inspection"
  },
  "hash": "d1a2e4598c0bb84fe9fb4a1f22ad15e02a74cd8265da3ca49cb3730b3bd6a89a"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'message' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 200,
      "offset": 34,
      "length": 7,
      "code": {
        "startLine": 198,
        "length": 7,
        "offset": 48,
        "surroundingCode": "            )\n\n            bot.loop.create_task(message.delete())\n        except (AttributeError, UnboundLocalError):\n            pass"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "3bb117c2c3e359a7a5f8ed0b50ce407ac692c970fc39560b0e1420e776256e95"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'player' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 530,
      "offset": 24,
      "length": 6,
      "code": {
        "startLine": 528,
        "length": 6,
        "offset": 87,
        "surroundingCode": "            await update_display(\n                bot=self.bot,\n                player=player or interaction.bot.lavalink.player_manager.get(interaction.guild.id),\n                new_message=await interaction.original_response(),\n                delay=5,"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "f6e1002ca1c5f932e271808a48e75971f846c4c6be903ef118a41d1db00819fe"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unbound local variables",
  "tags": [
    "Python"
  ],
  "severity": "High",
  "comment": "Local variable 'message' might be referenced before assignment",
  "detailsInfo": "Reports local variables referenced before assignment.\n\n**Example:**\n\n\n    x = 0\n    if x > 10:\n        b = 3\n    print(b)\n\nThe IDE reports a problem for `print(b)`. A possible fix is:\n\n\n    x = 0\n    if x > 10:\n        b = 3\n        print(b)\n",
  "sources": [
    {
      "type": "file",
      "path": "lava/utils.py",
      "language": "Python",
      "line": 276,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 274,
        "length": 7,
        "offset": 25,
        "surroundingCode": "\n    else:\n        await message.edit(embed=generate_display_embed(bot, player), components=components)\n\n    bot.logger.debug(\"Updating player in guild %s display message to %s\", bot.get_guild(player.guild_id), message.id)"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnboundLocalVariableInspection"
  },
  "hash": "ff68674bac662da0c2613e990346fbca6b737585f7477127a4d881d42b5593c4"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Parameter 'timeout' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/voice_client.py",
      "language": "Python",
      "line": 43,
      "offset": 32,
      "length": 14,
      "code": {
        "startLine": 41,
        "length": 14,
        "offset": 59,
        "surroundingCode": "            self.cleanup()\n\n    async def connect(self, *, timeout: float, reconnect: bool, self_deaf: bool = False,\n                      self_mute: bool = False) -> None:\n        \"\"\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "7aff68364220f438337fc6fc089e6cbe6cca8bc216919d92216baf7b011138e4"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Parameter 'interaction' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 684,
      "offset": 28,
      "length": 42,
      "code": {
        "startLine": 682,
        "length": 42,
        "offset": 60,
        "surroundingCode": "\n    @play.autocomplete(\"query\")\n    async def search(self, interaction: ApplicationCommandInteraction, query: str):\n        if re.match(r\"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\", query):\n            return []"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "d75467a284812476427f939f071eaa47765aca768dc29f9bac63a2964823cef2"
},{
  "tool": "Code Inspection",
  "category": "Python",
  "type": "Unused local symbols",
  "tags": [
    "Python"
  ],
  "severity": "Moderate",
  "comment": "Parameter 'reconnect' value is not used",
  "detailsInfo": "Reports local variables, parameters, and functions that are locally defined, but not used name in a function.",
  "sources": [
    {
      "type": "file",
      "path": "lava/voice_client.py",
      "language": "Python",
      "line": 43,
      "offset": 48,
      "length": 15,
      "code": {
        "startLine": 41,
        "length": 15,
        "offset": 75,
        "surroundingCode": "            self.cleanup()\n\n    async def connect(self, *, timeout: float, reconnect: bool, self_deaf: bool = False,\n                      self_mute: bool = False) -> None:\n        \"\"\""
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "PyUnusedLocalInspection"
  },
  "hash": "da04a5cd4e65db71fdc174052f9f085a16ec32563813f4f883c2de9cc2d0e0ac"
},{
  "tool": "Code Inspection",
  "category": "RegExp",
  "type": "Unnecessary non-capturing group",
  "tags": [
    "RegExp"
  ],
  "severity": "High",
  "comment": "Unnecessary non-capturing group `(?:%[0-9a-fA-F][0-9a-fA-F])`",
  "detailsInfo": "Reports unnecessary non-capturing groups, which have no influence on the match result.\n\n**Example:**\n\n\n      Everybody be cool, (?:this) is a robbery!\n\nAfter the quick-fix is applied:\n\n\n      Everybody be cool, this is a robbery!\n\nNew in 2021.1",
  "sources": [
    {
      "type": "file",
      "path": "lava/cogs/commands.py",
      "language": "Python",
      "line": 685,
      "offset": 72,
      "length": 3,
      "code": {
        "startLine": 683,
        "length": 3,
        "offset": 187,
        "surroundingCode": "    @play.autocomplete(\"query\")\n    async def search(self, interaction: ApplicationCommandInteraction, query: str):\n        if re.match(r\"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\", query):\n            return []\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "RegExpUnnecessaryNonCapturingGroup"
  },
  "hash": "bcc0433c069222049eaace56689a6744fbd639637b985a835f2687c976921e81"
}]}